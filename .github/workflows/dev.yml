name: "Terraform- dev"

on: 
  push:
    branches: 
    - master
    paths: 
    - environments/dev/**
  pull_request: 
    branches:
    - master
    paths:
    - environments/dev/**

env:
  #AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #TF_STATE_BUCKET_NAME: ${{ secrets.AWS_TF_STATE_BUCKET_NAME }}
  #PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PRIVATE }}
  #PUBLIC_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PUBLIC }}
  #AWS_REGION: us-east-1

jobs:
  AssumeRoleAndCallIdentity:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: <arn:aws:iam::111122223333:role/GitHubAction-AssumeRoleWithAction> #change to reflect your IAM roleâ€™s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secret.AWS_REGION }}
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity



  build:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
      
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: environments/dev/
      
      - name: Terraform Plan
        id:  plan
        run: terraform plan
        working-directory: environments/dev/

      - name: Terraform Apply
        id:  apply
        run: terraform apply --auto-approve
        working-directory: environments/dev/

      -  name: Terraform Destroy
         id: destroy
         run: terraform destroy --auto-approve
         working-directory: environments/dev/
